package main

import (
	"fmt"

	"math"
)

//定义一个
type Rectangle struct {
	width, height float64
}

type Circle struct {
	radius float64
}

func (r Rectangle) area() float64 {
	return r.width*r.height
}

func (c Circle) area() float64{
	return c.radius*c.radius*math.Pi
}

// 定义一个计算长方形的面积函数
func area( r Rectangle) float64 {
	return  r.width*r.height
}

func main() {
	r1 := Rectangle{12, 2}
	r2 := Rectangle{9,4}
	area1 := area(r1)
	area2 := area(r2)
	fmt.Println(area1)
	fmt.Println(area2)
}


//引出一个问题 如果计算多边形呢？重复的定义是冗余
//看完例子应该有点method的概念了吧。method area() 是依赖某个形状发生作用的。比如Rectangle.area() 。这个area()属于Rectangle的方法
//Rectangle存在字段length 和 wideth 和area()的方法的

/*
注意事项：
	虽然method的名字一模一样，但时如果接受者不一样，那么method也不一样
	method里面可以访问接收者的字段
	调用method通过，访问，就像struct里面访问字段一样

 */
